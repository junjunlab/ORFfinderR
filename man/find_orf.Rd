% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_orf.R
\name{find_orf}
\alias{find_orf}
\title{Find ORFs (Open Reading Frames) in DNA Sequences}
\usage{
find_orf(
  seq_obj = NULL,
  start_codons = c("ATG"),
  stop_codons = c("TAA", "TAG", "TGA"),
  minim_length = 75,
  return_AA = FALSE,
  filter_orf = TRUE
)
}
\arguments{
\item{seq_obj}{A DNA sequence or a DNAStringSet object. If passed as a file path, the file format should be FASTA.}

\item{start_codons}{A character vector of the start codons used to identify ORFs. Default is "ATG".}

\item{stop_codons}{A character vector of the stop codons used to terminate ORFs. Default is c("TAA", "TAG", "TGA").}

\item{minim_length}{Minimum length for an ORF (in nucleotides). Default is 75 nucleotides.}

\item{return_AA}{Logical. Whether to return the translated amino acid sequence of the ORF. Default is FALSE.}

\item{filter_orf}{Logical. If TRUE, nested ORFs are filtered to retain only the largest possible ORF between start and stop codon pairs. Default is TRUE.}
}
\value{
A data frame with information about the ORFs found, including start and stop positions, reading frame, strand orientation, ORF length, and optionally the amino acid sequence.

The returned data frame contains the following columns:
\item{id}{The sequence identifier.}
\item{st_start}{The start position of the ORF based on start codon. (1-based offset)}
\item{st_stop}{The stop position of the ORF based on stop codon. (1-based offset)}
\item{st_seq}{The start codon sequence.}
\item{sp_start}{The start position of the stop codon.}
\item{sp_stop}{The stop position of the stop codon.}
\item{sp_seq}{The stop codon sequence.}
\item{seq_len}{The length of the ORF in nucleotides.}
\item{aa_len}{The length of the translated protein in amino acids.}
\item{frame}{The reading frame (1, 2, or 3).}
\item{sense}{The strand orientation, '+' for forward, '-' for reverse strand.}
\item{t_len}{The total length of the input sequence.}
\item{aa_seq}{(Optional) The amino acid sequence of the found ORF (if return_AA is TRUE).}
\item{orf}{The ORF identifier including its frame and strand orientation.}
}
\description{
This function identifies Open Reading Frames (ORFs) from a given DNA sequence or a set of sequences.
It uses specified start and stop codons to locate possible ORFs.
}
\details{
This function looks for ORFs in both the forward and reverse strands of the input DNA sequence(s).
It searches for start codons on both strands provided (along with their reverse complements) and matches them
with possible stop codons to define ORFs. The user can specify a minimum length requirement and whether nested ORFs
should be filtered. Optionally, the corresponding amino acid sequences can be returned.
}
\examples{
\dontrun{# Example with a sequence string
seq <- "ATGAGAGTAGTAA"
find_orf(seq_obj = seq, return_AA = TRUE)

# Example with fasta file input
# find_orf(seq_obj = "example.fasta", return_AA = TRUE)}

}
\seealso{
\code{\link[Biostrings]{DNAStringSet}}, \code{\link[Biostrings]{translate}}, \code{\link[Biostrings]{reverseComplement}}
}
